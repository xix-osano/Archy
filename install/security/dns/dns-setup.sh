#!/usr/bin/env bash
# dns-setup-dot.sh – Local DNS sink-hole (dnsmasq + stubby (DoT) + ad-block)
# Uses stubby as a DNS-over-TLS stub resolver → dnsmasq listens on 127.0.0.1:53 → stubby (127.0.0.1#5453)
# Includes StevenBlack hosts file as a local blocklist.

set -euo pipefail

PACMAN_DEPS=(dnsmasq curl stubby ca-certificates)
HOSTS_URL="https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
DNSMASQ_DIR="/etc/dnsmasq.d"
HOSTS_FILE="$DNSMASQ_DIR/hosts.stevenblack"
STUBBY_CONF="/etc/stubby/stubby.yml"

echo "==> Installing required packages: ${PACMAN_DEPS[*]}"
sudo pacman -S --needed --noconfirm "${PACMAN_DEPS[@]}"

echo "==> Ensuring dnsmasq directory exists..."
sudo mkdir -p "$DNSMASQ_DIR"
sudo chmod 755 "$DNSMASQ_DIR"

echo "==> Downloading unified ad-block hosts list..."
if sudo curl -fLS --retry 3 -o "$HOSTS_FILE" "$HOSTS_URL"; then
  sudo chmod 644 "$HOSTS_FILE"
  echo "✔ Hosts file downloaded successfully to $HOSTS_FILE"
else
  echo "⚠ Failed to download hosts file. Continuing without ad-block list."
  sudo touch "$HOSTS_FILE"
  sudo chmod 644 "$HOSTS_FILE"
fi

echo "==> Configuring stubby (DNS-over-TLS stub resolver)..."
if [[ -f "$STUBBY_CONF" ]]; then
  sudo cp -a "$STUBBY_CONF" "${STUBBY_CONF}.bak.$(date +%s)"
  echo "Backup of existing stubby config created."
fi

sudo tee "$STUBBY_CONF" >/dev/null <<'EOF'
# stubby minimal config: listen on localhost:5453 and use common DoT providers
listen_addresses:
  - 127.0.0.1@5453
  - ::1@5453

tls_authentication: GETDNS_AUTHENTICATION_REQUIRED
tls_ca_path: "/etc/ssl/certs"

upstream_recursive_servers:
  - address_data: 1.1.1.1
    tls_auth_name: "cloudflare-dns.com"
    tls_port: 853
  - address_data: 1.0.0.1
    tls_auth_name: "cloudflare-dns.com"
    tls_port: 853
  - address_data: 9.9.9.9
    tls_auth_name: "dns.quad9.net"
    tls_port: 853
  - address_data: 149.112.112.112
    tls_auth_name: "dns.quad9.net"
    tls_port: 853

dnssec_return_status: GETDNS_EXTENSION_TRUE
round_robin_upstreams: 1
EOF

sudo chmod 640 "$STUBBY_CONF"
sudo chown root:root "$STUBBY_CONF"

echo "==> Enabling and starting stubby..."
sudo systemctl enable --now stubby

sleep 1
if ! ss -lnt | grep -q ':5453'; then
  echo "⚠ Stubby not detected on port 5453. Check 'sudo systemctl status stubby'."
fi

echo "==> Writing dnsmasq.conf..."
sudo tee /etc/dnsmasq.conf >/dev/null <<'EOF'
# dnsmasq: local caching + hosts-based sinkhole
listen-address=127.0.0.1
interface=lo
bind-interfaces
server=127.0.0.1#5453
no-dhcp-interface=lo
cache-size=1000
no-hosts
conf-dir=/etc/dnsmasq.d
EOF

sudo tee "$DNSMASQ_DIR/hosts.stevenblack.conf" >/dev/null <<EOF
# include StevenBlack hosts list
addn-hosts=$HOSTS_FILE
EOF
sudo chmod 644 "$DNSMASQ_DIR/hosts.stevenblack.conf"

echo "==> Enabling and starting dnsmasq..."
sudo systemctl enable --now dnsmasq

echo "==> Configuring resolv.conf..."
if [[ -f /etc/resolv.conf ]]; then
  sudo cp -a /etc/resolv.conf /etc/resolv.conf.bak.$(date +%s)
fi

if systemctl --quiet is-active systemd-resolved; then
  echo "Disabling systemd-resolved to avoid DNS conflicts..."
  sudo systemctl disable --now systemd-resolved || true
fi

sudo tee /etc/resolv.conf >/dev/null <<'EOF'
# Generated by dns-setup-dot.sh
nameserver 127.0.0.1
options edns0 single-request-reopen
EOF

sudo chmod 644 /etc/resolv.conf

if [[ -d /etc/NetworkManager/conf.d ]]; then
  sudo tee /etc/NetworkManager/conf.d/dns.conf >/dev/null <<'EOF'
[main]
dns=none
EOF
  sudo systemctl reload NetworkManager || true
fi

echo
echo "✔ Local DNS sink-hole + DoT active (dnsmasq → stubby)."
echo "Tests:"
echo "  dig @127.0.0.1 doubleclick.com        # should return 0.0.0.0 if blocked"
echo "  dig @127.0.0.1 +short whoami.cloudflare # should show Cloudflare resolver"
echo
echo "Notes:"
echo " - To debug: journalctl -u stubby -u dnsmasq -n 200 --no-hostname"
echo " - To revert: remove /etc/dnsmasq.conf, /etc/stubby, and restore /etc/resolv.conf.bak.*"
