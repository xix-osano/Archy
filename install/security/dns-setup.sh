#!/usr/bin/env bash
# dns-setup-dot.sh  –  local DNS sink-hole (dnsmasq + stubby (DoT) + ad-block)
# - Uses stubby as a local DNS-over-TLS stub resolver (stubby -> upstream DoT)
# - dnsmasq listens on 127.0.0.1:53 and forwards to stubby at 127.0.0.1#5453
# - StevenBlack hosts used as blocklist
set -euo pipefail

PACMAN_DEPS=(dnsmasq curl stubby ca-certificates)
HOSTS_URL="https://raw.githubusercontent.com/StevenBlack/hosts/master/hosts"
HOSTS_FILE="/etc/dnsmasq.d/hosts.stevenblack"
STUBBY_CONF="/etc/stubby/stubby.yml"

echo "==> Installing packages: ${PACMAN_DEPS[*]}"
pacman -S --needed --noconfirm "${PACMAN_DEPS[@]}"

echo "==> Downloading unified ad-block hosts ..."
curl -fLS --retry 3 -o "$HOSTS_FILE" "$HOSTS_URL"
chmod 644 "$HOSTS_FILE"

echo "==> Configuring stubby (DNS-over-TLS stub resolver) ..."
# If stubby already has a config, back it up first
if [[ -f "$STUBBY_CONF" ]]; then
  cp -a "$STUBBY_CONF" "${STUBBY_CONF}.bak.$(date +%s)"
fi

cat >"$STUBBY_CONF" <<'EOF'
# stubby default minimal config: listen on localhost:5453 and use common DoT providers
listen_addresses:
  - 127.0.0.1@5453
  - ::1@5453

tls_authentication: GETDNS_AUTHENTICATION_REQUIRED
tls_ca_path: "/etc/ssl/certs"

upstream_recursive_servers:
  - address_data: 1.1.1.1
    tls_auth_name: "cloudflare-dns.com"
    tls_port: 853
  - address_data: 1.0.0.1
    tls_auth_name: "cloudflare-dns.com"
    tls_port: 853
  - address_data: 9.9.9.9
    tls_auth_name: "dns.quad9.net"
    tls_port: 853
  - address_data: 149.112.112.112
    tls_auth_name: "dns.quad9.net"
    tls_port: 853

# Enable DNSSEC status return if desired (stubby can return DNSSEC status)
dnssec_return_status: GETDNS_EXTENSION_TRUE
round_robin_upstreams: 1
EOF

chmod 640 "$STUBBY_CONF"
chown root:root "$STUBBY_CONF"

echo "==> Enabling & starting stubby ..."
systemctl enable --now stubby

# Wait for stubby to be listening
sleep 1
if ! ss -lnt | grep -q ':5453'; then
  echo "Warning: stubby is not seen listening on port 5453 yet. Check 'systemctl status stubby'." >&2
fi

echo "==> Writing dnsmasq.conf (dnsmasq listens on localhost:53) ..."
cat >/etc/dnsmasq.conf <<'EOF'
# dnsmasq: local caching + hosts-based sinkhole
# listen only on loopback
listen-address=127.0.0.1
interface=lo
bind-interfaces

# Use local stubby (DoT) as upstream resolver
# dnsmasq forward to 127.0.0.1#5453 (stubby)
server=127.0.0.1#5453

# Let stubby handle DNSSEC/validation. If you want dnsmasq to do proxy DNSSEC,
# you can add 'proxy-dnssec' (but stubby + dnssec_return_status is preferred).
# proxy-dnssec

# no local DHCP – pure resolver
no-dhcp-interface=lo

# cache size
cache-size=1000

# reduce chances of leaking local hostnames
no-hosts

# include StevenBlack hosts
conf-dir=/etc/dnsmasq.d
EOF

# ensure hosts file is included (dnsmasq reads /etc/dnsmasq.d/*.conf and /etc/dnsmasq.d/*)
# Create a minimal include file so dnsmasq loads our hosts file as address entries
cat >/etc/dnsmasq.d/hosts.stevenblack.conf <<EOF
# include StevenBlack hosts list (keeps original format)
addn-hosts=/etc/dnsmasq.d/hosts.stevenblack
EOF
chmod 644 /etc/dnsmasq.d/hosts.stevenblack.conf

echo "==> Enabling & starting dnsmasq ..."
systemctl enable --now dnsmasq

echo "==> Setting localhost as only nameserver in /etc/resolv.conf ..."
# backup original
if [[ -f /etc/resolv.conf ]]; then
  cp -a /etc/resolv.conf /etc/resolv.conf.bak.$(date +%s)
fi

# If systemd-resolved is running we prefer to disable it in this setup
if systemctl --quiet is-active systemd-resolved; then
  echo "Stopping systemd-resolved to avoid conflicts..."
  systemctl disable --now systemd-resolved || true
fi

cat >/etc/resolv.conf <<'EOF'
# Generated by dns-setup-dot.sh
nameserver 127.0.0.1
options edns0 single-request-reopen
EOF
chmod 644 /etc/resolv.conf

# prevent NetworkManager from overwriting DNS (if present)
if [[ -d /etc/NetworkManager/conf.d ]]; then
  cat >/etc/NetworkManager/conf.d/dns.conf <<'EOF'
[main]
dns=none
EOF
  systemctl reload NetworkManager || true
fi

echo
echo "✔ Local DNS sink-hole + DoT active (dnsmasq -> stubby)."
echo "  Tests:"
echo "    • dig @127.0.0.1 doubleclick.com -> should return 0.0.0.0 (blocked) OR an ip if not blocked"
echo "    • dig @127.0.0.1 dnssec-failed.org -> behavior depends on DNSSEC validation"
echo "    • dig @127.0.0.1 +short whoami.cloudflare -> shows Cloudflare if DoT upstream is Cloudflare"
echo
echo "Notes:"
echo "- If you prefer unbound instead of stubby (unbound can also do DoT/DoH), swap the stubby bits."
echo "- To debug: journalctl -u stubby -u dnsmasq --no-hostname --no-pager -n 200"
